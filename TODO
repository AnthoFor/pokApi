
AWS ROAD MAP (nodejs 18):
  BDD maria DB:
    ☐ AWS RDS
  Serveur nodeJS:
    ☐ AWS Elastic beanstalk
      ☐ Création de l'application : https://eu-west-3.console.aws.amazon.com/elasticbeanstalk/home?region=eu-west-3#/environments
      ☐ Suivre ce tutoriel : https://www.freecodecamp.org/news/how-to-use-elastic-beanstalk-to-deploy-node-js-app/
        ☐ En fonction, ne pas tenir compte de la BDD si tu l'as créée ailleur
      ☐ ne pas oubliez .ebextensions ( a priori il le faut )
      ☐ Configuration du server
        ☐ Il faut aller dans EC2 : https://eu-west-3.console.aws.amazon.com/ec2/home?region=eu-west-3#Instances:
        ☐ Choisir l'instance en question
        ☐ "se connecter"
        ☐ Se connecter à l'aide d'EC2 instance connect ( plus besoin de putty)
        ☐ Arriver sur le "root" tapper : "su ec2-user"
        ☐ J'ai du installer pas mal de chose pour ce coup ci, mais parce que ca plantai au démarrage (web.service)
        ☐ Il faudra revenir a la  racine du server tapper : "cd .."
        ☐ "ls" pour afficher le contenu du dossier, faire "cd .." tant que pas a la racine
        ☐ Installation de EB CLI ( permet d'utiliser "eb logs" ou "eb deploy", hyper important pour les logs : )
          ☐ sudo yum install -y python3 python3-pip
          ☐ pip3 install awsebcli --upgrade --user
        ☐ le zip du déploiement va se trouver sur var/app/current
        ☐ SI JAMAIS ca refuse d'aller dans les repertoires (), c'est que ec2-user a pas les acces voici comment faire : 
          ☐ "sudo chown -R ec2-user:ec2-user /var/app/current/"
        ☐ Se rendre dans var/app/current
        ☐ Si y a des soucis de dependance voila comment fix :
          ☐ "rm -rf node_modules" > supprime le repertoire node_modules
          ☐ "npm install" > va le reinstaller
          ☐ OPTIONEL j'ai eu un soucis avec bcrypt (Error: /var/app/current/node_modules/bcrypt/lib/binding/napi-v3/bcrypt_lib.node: invalid ELF header) resolu grace a : "npm rebuild bcrypt --build-from-source"
          ☐ OPTION KIKOLOLASV : ne met pas le dossier node module dans le zip, upload le, connect toi a ton instance EC2, et npm install, ca works great
          ☐ J'ai eu un soucis de webservice : 
          ☐ Pour les logs : "sudo journalctl -u web.service"
          ☐ Pour relancer juste webservice : "sudo systemctl restart web.service"
        ☐ Voir les services en cours : "sudo systemctl list-units --type=service" (permet de voir si y en a un qui pose soucis)
    ☐ HTTPS... (attention ca m'a pris 8h)
      ☐ Suivre ce tutoriel, elastic bean stalk, créé un instance EC2. Donc ca fonctionne parfaitement. https://www.youtube.com/watch?v=JQP96EjRM98 à partir de 3:47
      ☐ LOAD BALANCER :
        ☐ CREATE
        ☐ LB Name
        ☐ Select all subnet
        ☐ create a new security group
          ☐ Security group name :nameSecurityGroup
          ☐ Description : my name security group
          ☐ Add inbund rules
            ☐ Allow HTTP traffic (0.0.0.0/0)
            ☐ Allow HTTPS trafic (0.0.0.0/0)
          ☐ Create
        ☐ Select nameSecurityGroup
        ☐ Listener and routing 
          ☐ HTTP / 80 -> Create target group
            ☐ Select "instance"
            ☐ Target groupe name : nameTargetGroup
            ☐ Next
            ☐ select instance
            ☐ include as pending below
            ☐ create target group
          ☐ Selectionne le target group que tu viens de créer dans "forward to"
          ☐ Create load balancer
          ☐ Quand les test "healthy" sont passé, normalement la redirection dns du load balancer est OK
      ☐ ROUTE 53
        ☐ Aller dans "registred domaine" et mettre de coté (bloc note) les noms de serveurs
        ☐ Vérifier qu'ils sont stricto senso les meme ( normalement rien a faire) que ceux dans "hosted zone"
        ☐ Dans hosted zone, cliquer sur "create record
          ☐ Simple routing
          ☐ CEST LA QUE CEST IMPORTANT MEC §§§
          ☐ Value/route traffic to -> ALIAS TO APPLICATION AND CLASSIC LOAD BALANCER
          ☐ Choisi la region ( la bonne west - 3 )
          ☐ Choisi ton load balancer ( c'est cette étape qu'il me manquait TBH)
          ☐ Create
      ☐ CERTIFICATE MANAGER
        ☐ request
        ☐ Met ton DNS
        ☐ request
        ☐ Alors qu'il est en "pending validation"
          ☐ Clique sur ton certificat
          ☐ "create record in route 53"
          ☐ Selectionne ton domain et "create record"
      ☐ LOAD BALANCER (AGAIN§§§§§§§)
        ☐ Ecouteurs
          ☐ Add listener
            ☐ HTTPS
            ☐ Forward
              ☐ Selectionne "nameTargetGroup"
              ☐ Security policy (laisse en recommandé)
              ☐ SSL Certif : from ACM, selectionne ton certif
              ☐ AJOUTER
            ☐ A partir de la tu peux test ton https://kikoo.asv ca doit marcher
        ☐ redirection du flux http > https
          ☐ Dans ecouteur, selectionne le HTTP : 80
            ☐ Le modifier :
              ☐ REDIRECT TO
              ☐ HTTPS : 443
              ☐ SAVE
    



  Site web d'acces API: